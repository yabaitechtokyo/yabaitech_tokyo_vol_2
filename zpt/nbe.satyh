@require: math
@import: ./moreproof

module NBE : sig
  direct \base : [] math-cmd
  direct \arr : [math; math] math-cmd
  direct \var : [math] math-cmd
  direct \lam : [math; math; math] math-cmd
  direct \app : [math; math] math-cmd
  direct \br : [] math-cmd
  direct \subst : [math; math; math] math-cmd
  direct \judgeStlc : [math; math; math] math-cmd

end = struct
  let-math \base = ${\iota}
  let-math \arr ant succ = ${#ant \rightarrow #succ}
  let-math \var name = ${#name}
  let-math \lam name typ body = ${\lambda #name^{#typ} . #body}
  let-math \app fn arg = ${#fn #arg}
  let-math \judgeStlc ctx term typ = ${#ctx \vdash #term : #typ}
  let-math \br = ${\rightarrow_{\beta}}
  let-math \subst m x n = ${#m \sqbracket{#x \coloneq #n}}
end
