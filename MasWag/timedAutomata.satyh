@require: itemize
@require: bnf
@import: local
@import: bib

let timedAutomata = '<+section{時間オートマトン} <
+subsection{時刻付きワード} <
+p {
先ず、時間オートマトンに与える入力として、時刻付きワード (timed word)を定義します。時刻付きワードで考える文字集合${\alphabet}は、通常のオートマトンにおける文字列と同様に有限集合ですが、時刻付きワードでは各文字${\event_i \in \alphabet}に正実数値のタイムスタンプ${\tsi{i} \in \Rp}が付いています。
これは「イベント ${\event_i} が時刻${\tsi{i}}で起こった」と読むことができます。
}
+definition ?:({時刻付きワード}) ?:(`def:timedWord`)
{
  ${\alphabet}を有限の文字集合とする。
  各 ${i \in \set{1,2,\ldots,n-1}}について${\ts_i < \ts_{i+1}}を満たす様な
  有限列${\word = \paren{\event_1,\ts_1},\paren{\event_2,\ts_2},\ldots,\paren{\event_n,\ts_n} \in \sequence{\alphabet \times \Rp}}
  を\dfn{時刻付きワード (timed word)}と言う。
  また、${\ts_0 = 0}と定める。
}
+example ?* ?:(`example:timedWord`)
{
  文字集合${\alphabet} を ${\alphabet = \set{\eventstyle{a}, \eventstyle{b}}}とする。
  このとき、${\word = \paren{\eventstyle{a}, 0.1},\paren{\eventstyle{b}, 0.2},\paren{\eventstyle{a}, 0.8}}は 時刻付きワードである。
  これは例えば「イベント ${\eventstyle{a}} が時刻${0.1}で起こり、イベント ${\eventstyle{b}} が時刻${0.2}で起こり、イベント ${\eventstyle{a}} が時刻${0.8}で起こった」と読むことができる。
  一方で${\word' = \paren{\eventstyle{a}, 0.2},\paren{\eventstyle{b}, 0.1},\paren{\eventstyle{a}, 0.8}}や
   ${\word'' = \paren{\eventstyle{a}, 0},\paren{\eventstyle{b}, 0.1},\paren{\eventstyle{a}, 0.8}}は 時刻付きワードではない。
  \footnote{定義によっては${\word''}の様にタイムスタンプが0のものや、タイムスタンプが広義単調増加のものもを時刻付きワードに含める場合もあります。}
}
>
+subsection{時間オートマトン (構文論)} <
+p {時間オートマトンでは、有限個の\dfn{クロック変数} (clock variable)を用いることで時刻付きワードのタイムスタンプ間の制約を表現します。
各クロック変数は時刻付きワードのタイムスタンプの増加と同じだけ増えます。
また、遷移の際にはクロック変数の値を${0}にリセットすることもできるので、遷移が起こった際のイベントからの時間経過を表すこともできます。
遷移の際にガード制約を用いることで、クロック変数の値が特定の条件を充たすときだけ遷移を許可することができます。
クロック変数の集合${\Clock}について、以下のBNFで定義される制約の集合を${\Guard}で表します。
   但し${\clock \in \Clock}、${\bowtie \in \set{\geq, >, =, <, \leq}}、${k \in \Z}とします。
}
+BNF (${\guard}) ([[${\clock \bowtie k}; ${\guard \land \guard}]]);
+definition ?:({時間オートマトン}) ?:(`def:TA`)
{
  有限の文字集合${\alphabet}について、\dfn{時間オートマトン}${\Autom}は6つ組${\paren{\alphabet,\Loc,\InitLoc,\AccLoc,\Clock,\Edge}}である。
  但し、${\alphabet}は有限の文字集合、
  ${\Loc}は有限の状態集合、
  ${\InitLoc\subseteq \Loc}は初期状態の集合、
  ${\AccLoc \subseteq \Loc}は受理状態の集合、
  ${\Clock}は有限のクロック変数の集合、
  ${\Edge \subseteq \Loc\times\Guard\times\alphabet\times \powerset{\Clock} \times \Loc}は状態遷移集合である。
}
+example ?* ?:(`example:TA`)
{
\ref-figure(`fig:TA`); は時間オートマトンの例 ${\AutomWith}である。但し、
${\alphabet = \set{a,b}}、
${\Loc = \set{\loc_0,\loc_1,\loc_2}}、
${\InitLoc = \set{\loc_0}}、
${\AccLoc = \set{\loc_2}}、
${\Clock = \set{x,y}}、
${\Edge = \set{\paren{\loc_0, x < 1 \land y < 5, a, \emptyset,\loc_1},\lb-math
               \paren{\loc_1, x < 1 \land y < 5, b, \set{x},\loc_0},               
               \paren{\loc_0, y \geq 5, a, \emptyset,\loc_2},               
               \paren{\loc_1, y \geq 5, b, \emptyset,\loc_2}}} である。
以後、
${\edge_1 = \paren{\loc_0, x < 1 \land y < 5, a, \emptyset,\loc_1}}、
${\edge_2 = \paren{\loc_1, x < 1 \land y < 5, b, \set{x},\loc_0}}、
${\edge_3 = \paren{\loc_0, y \geq 5, a, \emptyset,\loc_2}}、
${\edge_4 = \paren{\loc_1, y \geq 5, b, \emptyset,\loc_2}}と表記する。
}
>
+subsection{時間オートマトン (意味論)} <
+p{
クロック変数の集合 ${\Clock}について、関数${\cval\colon \Clock \to \Rnn}を\dfn{クロック割り当て} (clock valuation) と呼びます。
クロック割り当て${\cval}と${\duration \in \Rnn}について、${\cval + \duration}を用いて、${\cval}を${\duration}時間だけ経過させたクロック割り当てを表記します。
つまり、${\cval + \duration}は各${\clock \in \Clock}について、${\app{\paren{\cval + \duration}}{\clock} = \app{\cval}{\clock} + \duration}を充たすクロック割り当てです。
クロック変数のリセットは、
クロック割り当て${\cval}とクロック変数の部分集合${\resets \subseteq \Clock}について、各${\clock \in \resets}がリセットされ、それ以外のクロック変数はそのままである様なクロック割り当てを${\reset{\cval}{\resets}}と表記します。
形式的には、${\reset{\cval}{\resets}}は以下を充たすクロック割り当てです。
\eqn(${
\app{\reset{\cval}{\resets}}{\clock} = 
\cases!(
        [(${0}, {${\clock \in \resets} のとき});
        (${\app{\cval}{\clock}}, {${\clock \nin \resets} のとき})])
});
クロック割り当て${\cval}とクロック制約${\guard}について、${\cval}が${\guard}を充たすとき${\cval \models \guard}と表記し、充たさないとき${\cval \nmodels \guard}と表記します。
全てのクロック変数 ${\clock \in \Clock}について${0}を返すクロック割り当てを${\initcval}と表記します。
}
+p{
  時間オートマトンの意味論は\dfn{時間状態遷移システム} (timed transition system, TTS) と呼ばれる状態遷移システムを用いて定式化されます。
  時間状態遷移システムは時間オートマトンの\dfn{状況} (configuration) ${\state \in \State}の移り変りを表現します。
  時間オートマトンの状況は状態${\loc \in \Loc}とクロック割り当て${\cval \in \CVal}の対です。
  直感的には状況 ${\paren{\loc, \cval}}は、「状態${\loc}にいて、クロック変数${\clock \in \Clock}の値が${\cval\paren{\clock}}である」という状況を表しています。
  時間状態遷移システムの状況${\paren{\loc, \cval}}の、クロック割り当て${\cval \in \CVal}は時間${\duration}が経過すると${\cval + \duration}へと変化し、ガード条件${\guard}を充たす、つまり ${\paren{\cval + \duration} \models \guard}でありイベント${a}が起こったときに遷移を行うことができ、変数${\clock \in \resets}がリセットされます。
  一連の状況の移り変わりを\dfn{動作} (run)と呼びます。
}
+definition ?:({時間状態遷移システム}) ?:(`def:TTS`) {
時間オートマトン${\AutomWith}について、\dfn{時間状態遷移システム} (timed transition system, TTS) は4つ組${\paren{\State, \InitState, \AccState, \Transition}}である。
但し、${\State = \Loc \times \CVal}は\dfn{状況} (configuration)の集合、
${\InitState = \InitLoc \times \set{\initcval} \paren{\subseteq \State}}は\dfn{初期状況} (initial configuration)の集合、
${\AccState = \AccLoc \times \CVal \paren{\subseteq \State}}は\dfn{受理状況} (accepting configuration)の集合、
${\Transition \subseteq \State \times \State}は以下で定義される状況遷移関係である。
\eqn(${
        \paren{\paren{\loc,\cval},\paren{\loc',\cval'}} \in \Transition \iff \exists \edgeInside \in \Edge, \duration \in \Rnn. \paren{\cval + \duration} \models \guard, \cval' = \reset{\cval + \duration}{\resets}
});
}
+example ?* ?:(`example:TTS`) {
\ref-figure(`fig:TA`); の時間オートマトン${\AutomWith}について、
例えば
${\paren{\paren{\loc_0,\cval},\paren{\loc_1,\cval}}}や、
${\paren{\paren{\loc_1,\cval},\paren{\loc_0,\cval'}}}は${\Transition}に含まれるが、
${\paren{\paren{\loc_1,\cval},\paren{\loc_2,\cval'}}}は${\Transition}に含まれない。
但し${\cval,\cval'}はそれぞれ、
${\app{\cval}{x} = 0.2},${\app{\cval}{y} = 3.1}
${\app{\cval'}{x} = 0},${\app{\cval'}{y} = 3.1}
を充たすクロック割り当てである。
}
+definition ?:({動作}) ?:(`def:run`) {
時間オートマトン${\AutomWith}の
時間状態遷移システム${\TTS = \paren{\State, \InitState, \AccState, \Transition}}について、
状況${\paren{\loc,\cval} \in \State}と状態遷移${\edgeInside \in \Edge}が交互に表れる列、 
\eqn(${\path = \rstatei{0},\edgei{0}{1},\rstatei{1},\ldots,\edgei{n-1}{n},\rstatei{n}});
が${\rstatei{0} \in \InitState}、及び各${i \in \set{1,2,\ldots,n}}について${\paren{\rstatei{i-1},\rstatei{i}} \in \Transition}を充たすとき、${\path}を${\TTS}上の\dfn{動作} (run)と定義する。
上記の動作${\path}と、${\alphabet}上の時刻付きワード\promote-linebreak;${\wordWith}が、各${i \in \set{1,2,\ldots,n}}について、${\cval_i = \reset{\cval_{i-1} + \tsi{i} - \tsi{i-1}}{\resets_i}}を充たすとき、${\word}が${\path}に\dfn{対応する}と言う。
時間状態遷移システム${\TTS = \paren{\State, \InitState, \AccState, \Transition}}上の動作${\path = \state_{0},\edge_{1},\state_{1},\ldots,\edge_{n},\state_{n}}が${\state_n \in \AccState}を充たすとき、${\path}を\dfn{受理動作} (accepting run)と定義する。
}
+example ?* ?:(`example:run`) {
\ref-figure(`fig:TA`); の時間オートマトン${\AutomWith}について、
\eqn(${\path = \paren{\loc_0,\cval_0}, \edge_1, \paren{\loc_1,\cval_1}, \edge_2, \paren{\loc_0,\cval_2}, \edge_3,\paren{\loc_2,\cval_3}});
は${\Autom}の受理動作である。但し${\cval_0,\cval_1,\cval_2,\cval_3}は
${\app{\cval_0}{x} = 0},${\app{\cval_0}{y} = 0}
${\app{\cval_1}{x} = 0.3},${\app{\cval_1}{y} = 0.3}
${\app{\cval_2}{x} = 0},${\app{\cval_2}{y} = 1.2}
${\app{\cval_3}{x} = 0.5},${\app{\cval_3}{y} = 1.7}
を充たすクロック割り当てである。
時刻付きワード${\paren{a,0.3},\paren{b,1.2},\paren{a,1.7}}は、動作${\path}に対応する。
}
+definition ?:({言語}) ?:(`def:language`) {
時間オートマトン${\Autom}の時間状態遷移システムを${\TTS}とする。
時間オートマトン${\Autom}の言語${\Lg{\Autom}}を以下で定義される時刻付きワードの集合と定義する。
\eqn(${\Lg{\Autom} = \setsep{\word}{\text!({${\word}に対応する${\TTS}の受理動作${\path}が存在する})}});
}
+example ?* ?:(`example:language`) {
\ref-figure(`fig:TA`); の時間オートマトン${\Autom}の言語${\Lg{\Autom}}は、
\listing {
* ${ababab\ldots}という文字の列で、
* 最後の文字の時刻は${5}以上であり、
* それ以外の文字の時刻は${5}未満であり、
* 最後の文字以外の文字について、直近の${b} (直近の${b}が存在しない場合は時刻${0}) からの時間経過が${1}未満である
}
ような時刻付きワードの集合である。形式的には${\Lg{\Autom} = \mathcal{L}_a \cup \mathcal{L}_b}である。但し${\mathcal{L}_a}及び${\mathcal{L}_b}は以下。

\math-list([${\mathcal{L}_a =
                   \setsep{\paren{a, \tsi{1}}, \paren{b, \tsi{2}},\paren{a, \tsi{3}},\ldots,\paren{a, \tsi{2k+1}}}{k \in \Znn, \tau_{2k+1} \geq 5, \tau_{2k} < 5, \forall k' < k. \tau_{2k'+2} - \tau_{2k'} < 1}
                   };
            ${\mathcal{L}_b =
                   \setsep{\paren{a, \tsi{1}}, \paren{b, \tsi{2}},\paren{a, \tsi{3}},\ldots,\paren{b, \tsi{2k}}}{k \in \Zp, \tau_{2k} \geq 5, \tau_{2k-1} - \tau_{2k-2} < 1, \tau_{2k-1} < 5, \lb-math \fill-math \forall k' < k-1. \tau_{2k'+2} - \tau_{2k'} < 1}}]);
}
%%% ここひどい。SATySFi側でよしなに対応して欲しい
>
>
>